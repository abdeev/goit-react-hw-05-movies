{"version":3,"file":"static/js/168.51b128b1.chunk.js","mappings":"8SAIMA,EAAU,mCACVC,EAAcC,EAAAA,GAAAA,OAAa,CAC/BC,QAAS,kCAGEC,EAAmB,mCAAG,oGACVH,EAAYI,IAAZ,WARD,uBAQwC,CAC5DC,OAAQ,CACNC,QAASP,KAHoB,cAC3BQ,EAD2B,yBAM1BA,EAASC,KAAKC,SANY,2CAAH,qDASnBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTX,EAAYI,IAAZ,WAhBD,gBAgBwC,CAC5DC,OAAQ,CACNC,QAASP,EACTa,MAAOD,KAJqB,cAC1BJ,EAD0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,sDAUlBI,EAAe,mCAAG,WAAMC,GAAN,uFACNd,EAAYI,IAAZ,iBAA0BU,GAAM,CACrDT,OAAQ,CACNC,QAASP,KAHgB,cACvBQ,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfO,EAAc,mCAAG,WAAMD,GAAN,uFACLd,EAAYI,IAAZ,iBAA0BU,EAA1B,YAAwC,CAC7DT,OAAQ,CACNC,QAASP,KAHe,cACtBQ,EADsB,yBAMrBA,EAASC,KAAKQ,MANO,2CAAH,sDASdC,EAAiB,mCAAG,WAAMH,GAAN,uFACRd,EAAYI,IAAZ,iBAA0BU,EAA1B,YAAwC,CAC7DT,OAAQ,CACNC,QAASP,KAHkB,cACzBQ,EADyB,yBAMxBA,EAASC,KAAKC,SANU,2CAAH,qD,sIC7C9B,EAA4B,2BAA5B,EAAqE,6B,SCuDrE,EAnDgB,WACd,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAcC,EAAAA,EAAAA,cAAW,iBAAC,8GAELT,EAAAA,EAAAA,IAAkBM,GAFb,OAEtBhB,EAFsB,OAG5Ba,EAAUb,GAHkB,gDAK5Be,EAAS,EAAD,IALoB,yDAO7B,CAACC,IAMJ,OAJAI,EAAAA,EAAAA,YAAU,WACRF,GACD,GAAE,CAACA,IAEAJ,GAEA,gBAAKO,UAAWC,EAAhB,UACE,qDAKDV,GASH,gBAAKS,UAAWC,EAAhB,SACqB,IAAlBV,EAAOW,QACN,eAAIF,UAAWC,EAAf,SACGV,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASnB,EAApB,EAAoBA,GAApB,OACV,2BACE,wBAAKkB,GAAUA,KACf,uBAAIC,GAAWA,MAFRnB,EADC,OAQd,oFAlBF,gBAAKc,UAAWC,EAAhB,UACE,kFAqBP,C","sources":["api/ApiRequests.js","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst popularMovieUrl = 'trending/movie/week';\nconst searchByNameUrl = 'search/movie';\nconst API_KEY = '4c9d1a72d5deb0e18e0429eb25f6e8e0';\nconst fetchMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const searchPopularMovies = async () => {\n  const response = await fetchMovies.get(`/${popularMovieUrl}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await fetchMovies.get(`/${searchByNameUrl}`, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await fetchMovies.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const serchMovieCast = async id => {\n  const response = await fetchMovies.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const searchMovieReview = async id => {\n  const response = await fetchMovies.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reviews_container__2j80+\",\"reviewsList\":\"Reviews_reviewsList__hDAQA\"};","import { searchMovieReview } from 'api/ApiRequests';\nimport { useState, useCallback, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const [review, setReview] = useState([]);\n  const [error, setError] = useState('');\n  const { movieId } = useParams();\n\n  const fetchReview = useCallback(async () => {\n    try {\n      const response = await searchMovieReview(movieId);\n      setReview(response);\n    } catch (error) {\n      setError(error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    fetchReview();\n  }, [fetchReview]);\n\n  if (error) {\n    return (\n      <div className={css.container}>\n        <p>Something went wrong...</p>\n      </div>\n    );\n  }\n\n  if (!review) {\n    return (\n      <div className={css.container}>\n        <p>ðŸ¤­ We don't have any reviews for this movie</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={css.container}>\n      {review.length !== 0 ? (\n        <ul className={css.reviewsList}>\n          {review.map(({ author, content, id }) => (\n            <li key={id}>\n              <h2>{author && author}</h2>\n              <p>{content && content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>ðŸ¤­ We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["API_KEY","fetchMovies","axios","baseURL","searchPopularMovies","get","params","api_key","response","data","results","searchMoviesByName","searchQuery","query","searchMovieById","id","serchMovieCast","cast","searchMovieReview","useState","review","setReview","error","setError","movieId","useParams","fetchReview","useCallback","useEffect","className","css","length","map","author","content"],"sourceRoot":""}