{"version":3,"file":"static/js/881.1309b0ff.chunk.js","mappings":"8SAIMA,EAAU,mCACVC,EAAcC,EAAAA,GAAAA,OAAa,CAC/BC,QAAS,kCAGEC,EAAmB,mCAAG,oGACVH,EAAYI,IAAZ,WARD,uBAQwC,CAC5DC,OAAQ,CACNC,QAASP,KAHoB,cAC3BQ,EAD2B,yBAM1BA,EAASC,KAAKC,SANY,2CAAH,qDASnBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTX,EAAYI,IAAZ,WAhBD,gBAgBwC,CAC5DC,OAAQ,CACNC,QAASP,EACTa,MAAOD,KAJqB,cAC1BJ,EAD0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,sDAUlBI,EAAe,mCAAG,WAAMC,GAAN,uFACNd,EAAYI,IAAZ,iBAA0BU,GAAM,CACrDT,OAAQ,CACNC,QAASP,KAHgB,cACvBQ,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfO,EAAc,mCAAG,WAAMD,GAAN,uFACLd,EAAYI,IAAZ,iBAA0BU,EAA1B,YAAwC,CAC7DT,OAAQ,CACNC,QAASP,KAHe,cACtBQ,EADsB,yBAMrBA,EAASC,KAAKQ,MANO,2CAAH,sDASdC,EAAiB,mCAAG,WAAMH,GAAN,uFACRd,EAAYI,IAAZ,iBAA0BU,EAA1B,YAAwC,CAC7DT,OAAQ,CACNC,QAASP,KAHkB,cACzBQ,EADyB,yBAMxBA,EAASC,KAAKC,SANU,2CAAH,qD,4EC7C9B,EAA4B,6BAA5B,EAAyE,iCAAzE,EAA8H,qC,SC6B9H,EA1BkB,SAAC,GAAmB,IAAjBS,EAAgB,EAAhBA,UACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EACGA,EAAUK,KAAI,SAAAC,GAAE,OACd,eAAIH,UAAWC,EAAf,UACE,SAAC,KAAD,CACEG,GAAE,kBAAaD,EAAGV,IAClBY,MAAO,CAAEC,KAAMR,GACfE,UAAWC,EAHb,SAKGE,EAAGI,MAAQJ,EAAGK,SANoBL,EAAGV,GAD5B,IAWhB,MAGT,C,sICvBD,EAA4B,0BAA5B,EAAkE,0BAAlE,EAA2G,6B,kBC6C3G,EAvCe,WACb,OAAsCgB,EAAAA,EAAAA,UAAS,IAA/C,eAAOnB,EAAP,KAAoBoB,EAApB,KACA,GAAkCD,EAAAA,EAAAA,UAAS,IAA3C,eAAOZ,EAAP,KAAkBc,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMvB,EAAQsB,EAAa9B,IAAI,SAEzBgC,GAAaC,EAAAA,EAAAA,cAAW,iBAAC,uFACxBzB,EADwB,kEAINF,EAAAA,EAAAA,IAAmBE,GAJb,OAIvBL,EAJuB,OAK7ByB,EAAazB,GALgB,2CAM5B,CAACK,IAUJ,OAJA0B,EAAAA,EAAAA,YAAU,WACRF,GACD,GAAE,CAACA,EAAYxB,KAGd,iBAAKS,UAAWC,EAAhB,WACE,kBAAMiB,SAVW,SAAAC,GACnBA,EAAEC,iBACFN,EAAgB,CAAEvB,MAAOD,GAC1B,EAOG,WACE,kBACEU,UAAWC,EACXoB,KAAK,OACLC,SAAU,SAAAH,GAAC,OAAIT,EAAeS,EAAEI,OAAOC,MAA5B,KAEb,mBAAQxB,UAAWC,EAAkBoB,KAAK,SAA1C,wBAIF,SAACI,EAAA,EAAD,CAAW5B,UAAWA,MAG3B,C","sources":["api/ApiRequests.js","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst popularMovieUrl = 'trending/movie/week';\nconst searchByNameUrl = 'search/movie';\nconst API_KEY = '4c9d1a72d5deb0e18e0429eb25f6e8e0';\nconst fetchMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const searchPopularMovies = async () => {\n  const response = await fetchMovies.get(`/${popularMovieUrl}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await fetchMovies.get(`/${searchByNameUrl}`, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await fetchMovies.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const serchMovieCast = async id => {\n  const response = await fetchMovies.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const searchMovieReview = async id => {\n  const response = await fetchMovies.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\",\"movieListItem\":\"MovieList_movieListItem__6DqRG\",\"movieListItemLink\":\"MovieList_movieListItemLink__F2Z-T\"};","import { NavLink, useLocation } from 'react-router-dom';\nimport css from './MovieList.module.css';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movieList }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.movieList}>\n      {movieList\n        ? movieList.map(el => (\n            <li className={css.movieListItem} key={el.id}>\n              <NavLink\n                to={`/movies/${el.id}`}\n                state={{ from: location }}\n                className={css.movieListItemLink}\n              >\n                {el.name || el.title}\n              </NavLink>\n            </li>\n          ))\n        : null}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movieList: PropTypes.arrayOf(PropTypes.shape),\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\",\"formInput\":\"Movies_formInput__zmXM8\",\"buttonSubmit\":\"Movies_buttonSubmit__ebN3X\"};","import { useEffect, useState, useCallback } from 'react';\nimport { searchMoviesByName } from 'api/ApiRequests';\nimport MovieList from 'components/MovieList/MovieList';\nimport css from './Movies.module.css';\n\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const fetchMovie = useCallback(async () => {\n    if (!query) {\n      return;\n    }\n    const response = await searchMoviesByName(query);\n    setMovieList(response);\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: searchQuery });\n  };\n  useEffect(() => {\n    fetchMovie();\n  }, [fetchMovie, query]);\n\n  return (\n    <div className={css.container}>\n      <form onSubmit={handleSubmit}>\n        <input\n          className={css.formInput}\n          type=\"text\"\n          onChange={e => setSearchQuery(e.target.value)}\n        />\n        <button className={css.buttonSubmit} type=\"submit\">\n          Search\n        </button>\n      </form>\n      <MovieList movieList={movieList} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","fetchMovies","axios","baseURL","searchPopularMovies","get","params","api_key","response","data","results","searchMoviesByName","searchQuery","query","searchMovieById","id","serchMovieCast","cast","searchMovieReview","movieList","location","useLocation","className","css","map","el","to","state","from","name","title","useState","setSearchQuery","setMovieList","useSearchParams","searchParams","setSearchParams","fetchMovie","useCallback","useEffect","onSubmit","e","preventDefault","type","onChange","target","value","MovieList"],"sourceRoot":""}