{"version":3,"file":"static/js/301.cd803e70.chunk.js","mappings":"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","sources":["api/ApiRequests.js","webpack://react-homework-template/./src/pages/MovieCard/MovieCard.module.css?2455","pages/MovieCard/MovieCard.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst popularMovieUrl = 'trending/movie/week';\nconst searchByNameUrl = 'search/movie';\nconst API_KEY = '4c9d1a72d5deb0e18e0429eb25f6e8e0';\nconst fetchMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const searchPopularMovies = async () => {\n  const response = await fetchMovies.get(`/${popularMovieUrl}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await fetchMovies.get(`/${searchByNameUrl}`, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await fetchMovies.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const serchMovieCast = async id => {\n  const response = await fetchMovies.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const searchMovieReview = async id => {\n  const response = await fetchMovies.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"MovieCard_section__3D-nb\",\"info_container\":\"MovieCard_info_container__snEY3\",\"goBackLink\":\"MovieCard_goBackLink__LRvZn\",\"cardImage\":\"MovieCard_cardImage__gridj\",\"cardDescription\":\"MovieCard_cardDescription__UZwi6\",\"cardWrapper\":\"MovieCard_cardWrapper__9WSgO\",\"cardLink\":\"MovieCard_cardLink__pOoPo\"};","import { searchMovieById } from 'api/ApiRequests';\nimport { useCallback, useRef, useEffect, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport css from './MovieCard.module.css';\n\nconst MovieCard = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [error, setError] = useState('');\n  const location = useLocation();\n  const refLocation = useRef(location.state?.from);\n\n  const fetchMovie = useCallback(async () => {\n    try {\n      const response = await searchMovieById(movieId);\n      setMovieDetails(response);\n    } catch (error) {\n      setError(error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    fetchMovie();\n  }, [movieId, fetchMovie]);\n  if (error.code === 'ERR_BAD_REQUEST') {\n    return (\n      <div className={css.container}>\n        <p>ðŸ¤­ The page for your request is not create yet or `${error.code}`</p>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={css.container}>\n        <p>... Something went wrong ...</p>\n      </div>\n    );\n  }\n  if (!movieDetails) {\n    return (\n      <div className={css.container}>\n        <p>We don't have any reviews for this movie</p>\n      </div>\n    );\n  }\n  const { title, poster_path, release_date, vote_average, overview, genres } =\n    movieDetails;\n\n  return (\n    <>\n      <section className={css.section}>\n        <div className={css.container}>\n          <Link className={css.goBackLink} to={refLocation.current ?? '/'}>\n            Go back\n          </Link>\n          <div className={css.cardWrapper}>\n            <img\n              className={css.cardImage}\n              src={\n                poster_path && `https://image.tmdb.org/t/p/w500${poster_path}`\n              }\n              alt={title}\n            />\n            <div className={css.cardDescription}>\n              <h2>\n                {movieDetails\n                  ? `${title}(${new Date(release_date).getFullYear()})`\n                  : null}\n              </h2>\n              <p>User score: {Math.ceil(vote_average * 10)} %</p>\n              <h2>Overview</h2>\n              <p>{overview}</p>\n              <h2>Genres</h2>\n              <p>{genres ? genres.map(genre => genre.name).join(' ') : '-'}</p>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className={css.section}>\n        <div className={css.info_container}>\n          <NavLink className={css.cardLink} to={'cast'}>\n            Cast\n          </NavLink>\n          <NavLink className={css.cardLink} to={'reviews'}>\n            Reviews\n          </NavLink>\n        </div>\n      </section>\n      <section className={css.section}>\n        <Outlet />\n      </section>\n    </>\n  );\n};\nexport default MovieCard;\n"],"names":["API_KEY","fetchMovies","axios","baseURL","searchPopularMovies","get","params","api_key","response","data","results","searchMoviesByName","searchQuery","query","searchMovieById","id","serchMovieCast","cast","searchMovieReview","movieId","useParams","useState","movieDetails","setMovieDetails","error","setError","location","useLocation","refLocation","useRef","state","from","fetchMovie","useCallback","useEffect","code","className","css","title","poster_path","release_date","vote_average","overview","genres","to","current","src","alt","Date","getFullYear","Math","ceil","map","genre","name","join"],"sourceRoot":""}