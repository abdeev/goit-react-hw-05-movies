{"version":3,"file":"static/js/76.2abae3ac.chunk.js","mappings":"6SAIMA,EAAU,mCACVC,EAAcC,EAAAA,GAAAA,OAAa,CAC/BC,QAAS,kCAGEC,EAAmB,mCAAG,oGACVH,EAAYI,IAAZ,WARD,uBAQwC,CAC5DC,OAAQ,CACNC,QAASP,KAHoB,cAC3BQ,EAD2B,yBAM1BA,EAASC,KAAKC,SANY,2CAAH,qDASnBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTX,EAAYI,IAAZ,WAhBD,gBAgBwC,CAC5DC,OAAQ,CACNC,QAASP,EACTa,MAAOD,KAJqB,cAC1BJ,EAD0B,yBAOzBA,EAASC,KAAKC,SAPW,2CAAH,sDAUlBI,EAAe,mCAAG,WAAMC,GAAN,uFACNd,EAAYI,IAAZ,iBAA0BU,GAAM,CACrDT,OAAQ,CACNC,QAASP,KAHgB,cACvBQ,EADuB,yBAMtBA,EAASC,MANa,2CAAH,sDASfO,EAAc,mCAAG,WAAMD,GAAN,uFACLd,EAAYI,IAAZ,iBAA0BU,EAA1B,YAAwC,CAC7DT,OAAQ,CACNC,QAASP,KAHe,cACtBQ,EADsB,yBAMrBA,EAASC,KAAKQ,MANO,2CAAH,sDASdC,EAAiB,mCAAG,WAAMH,GAAN,uFACRd,EAAYI,IAAZ,iBAA0BU,EAA1B,YAAwC,CAC7DT,OAAQ,CACNC,QAASP,KAHkB,cACzBQ,EADyB,yBAMxBA,EAASC,KAAKC,SANU,2CAAH,qD,qIC7C9B,EAA4B,wBAA5B,EAA+D,uBAA/D,EAA6I,uBAA7I,EAAkL,0B,kBC6DlL,EAxDa,WACX,OAAwBS,EAAAA,EAAAA,UAAS,IAAjC,eAAOF,EAAP,KAAaG,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAYC,EAAAA,EAAAA,cAAW,iBAAC,8GAEHV,EAAAA,EAAAA,IAAeO,GAFZ,OAEpBf,EAFoB,OAG1BY,EAAQZ,GAHkB,gDAK1Bc,EAAS,EAAD,IALkB,yDAO3B,CAACC,IAMJ,OAJAI,EAAAA,EAAAA,YAAU,WACRF,GACD,GAAE,CAACA,IAEAJ,GAEA,gBAAKO,UAAWC,EAAhB,UACE,sDAMJ,eAAID,UAAWC,EAAf,SACGZ,EAAKa,OACJb,EAAKc,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,UAAWnB,EAAlC,EAAkCA,GAAlC,OACP,gBAAIa,UAAWC,EAAf,WACE,gBACED,UAAWC,EACXM,IACEF,EAAY,yCAC0BA,GAClCG,EAENC,IAAKL,KAEP,4BACE,wBAAKA,KAEL,uCAAeE,UAbenB,EAD3B,KAmBT,gBAAKa,UAAWC,EAAhB,UACE,oFAKT,C","sources":["api/ApiRequests.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst popularMovieUrl = 'trending/movie/week';\nconst searchByNameUrl = 'search/movie';\nconst API_KEY = '4c9d1a72d5deb0e18e0429eb25f6e8e0';\nconst fetchMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nexport const searchPopularMovies = async () => {\n  const response = await fetchMovies.get(`/${popularMovieUrl}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMoviesByName = async searchQuery => {\n  const response = await fetchMovies.get(`/${searchByNameUrl}`, {\n    params: {\n      api_key: API_KEY,\n      query: searchQuery,\n    },\n  });\n  return response.data.results;\n};\n\nexport const searchMovieById = async id => {\n  const response = await fetchMovies.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data;\n};\n\nexport const serchMovieCast = async id => {\n  const response = await fetchMovies.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.cast;\n};\n\nexport const searchMovieReview = async id => {\n  const response = await fetchMovies.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__iz+ye\",\"castList\":\"Cast_castList__ARoWn\",\"noCastMessage\":\"Cast_noCastMessage__piD4G\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castPicture\":\"Cast_castPicture__GVXKN\"};","import { serchMovieCast } from 'api/ApiRequests';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport noPhotoIcon from '../../images/NoPhoto.png';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n\n  const fetchCast = useCallback(async () => {\n    try {\n      const response = await serchMovieCast(movieId);\n      setCast(response);\n    } catch (error) {\n      setError(error);\n    }\n  }, [movieId]);\n\n  useEffect(() => {\n    fetchCast();\n  }, [fetchCast]);\n\n  if (error) {\n    return (\n      <div className={css.container}>\n        <p>Something went wrong...</p>\n      </div>\n    );\n  }\n\n  return (\n    <ul className={css.castList}>\n      {cast.length ? (\n        cast.map(({ name, profile_path, character, id }) => (\n          <li className={css.castItem} key={id}>\n            <img\n              className={css.castPicture}\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : noPhotoIcon\n              }\n              alt={name}\n            />\n            <div>\n              <h2>{name}</h2>\n\n              <p>Character: {character}</p>\n            </div>\n          </li>\n        ))\n      ) : (\n        <div className={css.container}>\n          <p>ðŸ¤­ We don't have information for this movie</p>\n        </div>\n      )}\n    </ul>\n  );\n};\nexport default Cast;\n"],"names":["API_KEY","fetchMovies","axios","baseURL","searchPopularMovies","get","params","api_key","response","data","results","searchMoviesByName","searchQuery","query","searchMovieById","id","serchMovieCast","cast","searchMovieReview","useState","setCast","error","setError","movieId","useParams","fetchCast","useCallback","useEffect","className","css","length","map","name","profile_path","character","src","noPhotoIcon","alt"],"sourceRoot":""}